{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","_ref$label","label","_ref$placeholder","placeholder","concat","_ref$required","required","_ref$onChange","onChange","_useState","useState","Math","random","toFixed","slice","id","_slicedToArray","_useState3","_useState4","touched","setTouched","hasError","htmlFor","type","classNames","event","target","onBlur","NewMovie","onAdd","_useState2","count","setCount","titleField","setTitleField","_useState5","_useState6","descrField","setDescrField","_useState7","_useState8","setImgUrl","_useState9","_useState10","setImdbUrl","_useState11","_useState12","setImdbId","reset","disabled","onSubmit","preventDefault","prev","App","moviesFromServer","setMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6677c2f.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","/*eslint-disable*/\nimport React, { useState } from \"react\";\nimport { TextField } from \"../TextField\";\nimport { Movie } from \"../../types/Movie\";\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [titleField, setTitleField] = useState(\"\");\n  const [descrField, setDescrField] = useState(\"\");\n  const [imgUrl, setImgUrl] = useState(\"\");\n  const [imdbUrl, setImdbUrl] = useState(\"\");\n  const [imdbId, setImdbId] = useState(\"\");\n\n  const submitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const objToSend = {\n      title: titleField,\n      description: descrField,\n      imgUrl,\n      imdbId,\n      imdbUrl,\n    };\n\n    onAdd(objToSend);\n    setCount((prev) => (prev += 1));\n    reset();\n  };\n\n  const reset = () => {\n    setTitleField(\"\");\n    setDescrField(\"\");\n    setImgUrl(\"\");\n    setImdbUrl(\"\");\n    setImdbId(\"\");\n  };\n\n  const disabled = !titleField || !imdbUrl || !imgUrl || !imdbId;\n\n  return (\n    <form className=\"NewMovie\" key={count} onSubmit={submitForm}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={titleField}\n        onChange={(value) => setTitleField(value)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={descrField}\n        onChange={(value) => setDescrField(value)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={(value) => setImgUrl(value)}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={(value) => setImdbUrl(value)}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={(value) => setImdbId(value)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={disabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","/*eslint-disable*/\nimport \"./App.scss\";\nimport { useState } from \"react\";\nimport { MoviesList } from \"./components/MoviesList\";\nimport { NewMovie } from \"./components/NewMovie\";\nimport moviesFromServer from \"./api/movies.json\";\nimport { Movie } from \"./types/Movie\";\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const onAdd = (movie: Movie) => {\n    setMovies((prev) => [...prev, movie]);\n  };\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}